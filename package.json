{
    "name": "vscode-azureterraform",
    "displayName": "Azure Terraform",
    "description": "VS Code extension for developing with Terraform on Azure",
    "version": "0.3.4",
    "publisher": "ms-azuretools",
    "aiKey": "ae482601-060f-4c71-8567-ebd5085483c9",
    "icon": "images/terraform.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/Azure/vscode-azureterraform.git"
    },
    "license": "MIT",
    "engines": {
        "vscode": "^1.30.0"
    },
    "preview": true,
    "categories": [
        "Azure",
        "Other"
    ],
    "keywords": [
        "cloudshell",
        "devops",
        "terraform",
        "azure"
    ],
    "activationEvents": [
        "workspaceContains:**/*.tf",
        "onCommand:azureTerraform.init",
        "onCommand:azureTerraform.plan",
        "onCommand:azureTerraform.apply",
        "onCommand:azureTerraform.validate",
        "onCommand:azureTerraform.refresh",
        "onCommand:azureTerraform.destroy",
        "onCommand:azureTerraform.visualize",
        "onCommand:azureTerraform.exectest",
        "onCommand:azureTerraform.push",
        "onCommand:azureTerraform.showSurvey"
    ],
    "main": "./out/extension",
    "contributes": {
        "languages": [
            {
                "id": "terraform",
                "aliases": [
                    "Terraform",
                    "terraform"
                ],
                "extensions": [
                    ".tf"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "configuration": {
            "title": "Azure Terraform",
            "properties": {
                "azureTerraform.terminal": {
                    "type": "string",
                    "default": "integrated",
                    "enum": [
                        "cloudshell",
                        "integrated"
                    ],
                    "description": "Specifies terminal used to run Terraform commands. Valid setting is `integrated`."
                },
                "azureTerraform.checkTerraformCmd": {
                    "type": "boolean",
                    "default": "true",
                    "description": "Specifies whether or not check terraform installed in the PATH."
                },
                "azureTerraform.files": {
                    "type": "string",
                    "default": "**/*.{rb,sh,tf,tfvars,txt,yml}",
                    "description": "Indicates the files that should be synchronized to Azure Cloud Shell using the glob pattern string. By default: '**/*.{tf,txt,yml,tfvars,rb}'."
                },
                "azureTerraform.test.imageName": {
                    "type": "string",
                    "default": "microsoft/terraform-test",
                    "description": "Indicates the container that you want to use to run the tests. By default: 'microsoft/terraform-test'."
                },
                "azureTerraform.test.aciName": {
                    "type": "string",
                    "default": "tf-test-aci",
                    "description": "Indicates the name of the Azure Container Instance to use for testing. By default: 'tf-test-aci'."
                },
                "azureTerraform.test.aciResourceGroup": {
                    "type": "string",
                    "default": "tfTestResourceGroup",
                    "description": "Indicates the name of the Resource Group to use for the ACI instance. By default: 'tfTestResourceGroup'."
                },
                "azureTerraform.aciContainerGroup": {
                    "type": "string",
                    "default": "tfTestContainerGroup",
                    "description": "Indicates the name of the Container Group that host the ACI instance. By default: 'tfTestContainerGroup'."
                },
                "azureTerraform.test.location": {
                    "type": "string",
                    "default": "westus",
                    "description": "Indicates the location where to deploy the test container instance. By default: 'westus'."
                },
                "azureTerraform.survey": {
                    "surveyPromptDate": {
                        "type": "string",
                        "default": "none",
                        "description": "Date of the AzureRM survey will be prompted to the user"
                    },
                    "surveyPromptIgnoredCount": {
                        "type": "number",
                        "default": 0,
                        "description": "Number of times the survey prompt has been ignored"
                    }
                }
            }
        },
        "commands": [
            {
                "command": "azureTerraform.plan",
                "title": "Plan",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.apply",
                "title": "Apply",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.init",
                "title": "Init",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.validate",
                "title": "Validate",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.refresh",
                "title": "Refresh",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.destroy",
                "title": "Destroy",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.visualize",
                "title": "Visualize",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.exectest",
                "title": "Execute Test",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.push",
                "title": "Push",
                "category": "Azure Terraform"
            },
            {
                "command": "azureTerraform.showSurvey",
                "title": "Terraform AzureRM Provider: Show Survey"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run download:ls && npm run esbuild-base -- --minify",
        "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
        "esbuild": "npm run esbuild-base -- --sourcemap",
        "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
        "compile": "npm run esbuild",
        "download:ls": "ts-node ./build/downloader.ts",
        "watch": "tsc -watch -p ./",
        "test": "npm run compile && node ./out/test/runTest.js",
        "lint": "tslint --project tsconfig.json -t verbose"
    },
    "devDependencies": {
        "@types/fs-extra": "^5.0.0",
        "@types/keytar": "^4.0.1",
        "@types/lodash": "^4.14.121",
        "@types/mocha": "^5.2.7",
        "@types/node": "^7.0.43",
        "@types/opn": "^5.1.0",
        "@types/request-promise-native": "^1.0.21",
        "@types/semver": "^5.4.0",
        "@types/unzip-stream": "^0.3.1",
        "@types/vscode": "^1.30.0",
        "diff": ">=3.5.0",
        "mocha": "^11.1.0",
        "ts-node": "^10.4.0",
        "tslint": "^5.20.1",
        "typescript": "^2.6.1",
        "unzip-stream": "^0.3.1",
        "vscode-test": "^1.3.0"
    },
    "dependencies": {
        "azure-arm-resource": "^0.10.7",
        "azure-storage": "^2.10.1",
        "esbuild": "^0.25.2",
        "fs-extra": "^4.0.2",
        "lodash": "^4.17.21",
        "ms-rest": "^2.3.2",
        "ms-rest-azure": "^2.5.7",
        "opn": "5.1.0",
        "request-promise-native": "^1.0.9",
        "vscode-languageclient": "^9.0.1",
        "vscode-extension-telemetry-wrapper": "^0.8.0"
    }
}
