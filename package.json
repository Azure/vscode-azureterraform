{
    "name": "vscode-terraform-azure",
    "displayName": "vscode-terraform-azure",
    "description": "VS Code extension for developing with Terraform on Azure",
    "version": "0.0.1",
    "publisher": "Microsoft",
    "repository": {
        "type": "git",
        "url": "https://github.com/Azure/vscode-terraform-azure.git"
    },
    "engines": {
        "vscode": "^1.18.0"
    },
    "preview": true,
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "workspaceContains:**/*.tf",
        "onCommand:vscode-terraform-azure.init",
        "onCommand:vscode-terraform-azure.plan",
        "onCommand:vscode-terraform-azure.apply",
        "onCommand:vscode-terraform-azure.validate",
        "onCommand:vscode-terraform-azure.refresh",
        "onCommand:vscode-terraform-azure.destroy",
        "onCommand:vscode-terraform-azure.visualize",
        "onCommand:vscode-terraform-azure.exectest",
        "onCommand:vscode-terraform-azure.push"
    ],
    "main": "./out/extension",
    "contributes": {
        "configuration": {
            "title": "Terraform Azure",
            "properties": {
                "tf-azure.terminal": {
                    "type": "string",
                    "default": "cloudshell",
                    "description": "Specifies terminal used to run Terraform commands. Valid settings are `cloudshell` or `integrated`"
                },
                "tf-azure.files": {
                    "type": "string",
                    "default": "**/*.{rb,sh,tf,tfvars,txt,yml}",
                    "description": "Indicates the files that should be synchronized to Azure cloudshell using the glob pattern string, for example: **/*.{tf,txt,yml,tfvars,rb}"
                },
                "tf-azure.test-container": {
                    "type": "string",
                    "default": "microsoft/terraform-test",
                    "description": "Indicates the container that you want to use to run the tests. For example: microsoft/terraform-test"
                },
                "tf-azure.aci-name": {
                    "type": "string",
                    "default": "terraformtesting",
                    "description": "Indicates the name of the Azure Container Instance to use for testing. For example: terraformtesting"
                },
                "tf-azure.aci-ResGroup": {
                    "type": "string",
                    "default": "TerraformTestRG",
                    "description": "Indicates the name of the Resource Group to use for the ACI instance. For example: TerrafornTestRG"
                },
                "tf-azure.aci-group": {
                    "type": "string",
                    "default": "TerraformTesting",
                    "description": "Indicates the name of the Container Group that host the ACI instance. For example: TerrafornTesting"
                },
                "tf-azure.test-location": {
                    "type": "string",
                    "default": "westus",
                    "description": "Indicates the location where to deploy the test container instance. For example: westus"
                }
            }
        },
        "commands": [
            {
                "command": "vscode-terraform-azure.plan",
                "title": "plan",
                "category": "Terraform Azure"
            },
            {
                "command": "vscode-terraform-azure.apply",
                "title": "apply",
                "category": "Terraform Azure"
            },
            {
                "command": "vscode-terraform-azure.init",
                "title": "init",
                "category": "Terraform Azure"
            },
            {
                "command": "vscode-terraform-azure.validate",
                "title": "validate",
                "category": "Terraform Azure"
            },
            {
                "command": "vscode-terraform-azure.refresh",
                "title": "refresh",
                "category": "Terraform Azure"
            },
            {
                "command": "vscode-terraform-azure.destroy",
                "title": "destroy",
                "category": "Terraform Azure"
            },
            {
                "command": "vscode-terraform-azure.visualize",
                "title": "visualize",
                "category": "Terraform Azure"
            },
            {
                "command": "vscode-terraform-azure.exectest",
                "title": "execute test",
                "category": "Terraform Azure"
            },
            {
                "command": "vscode-terraform-azure.push",
                "title": "push",
                "category": "Terraform Azure"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test",
        "lint": "tslint --project tsconfig.json -t verbose"
    },
    "devDependencies": {
        "@types/fs-extra": "^5.0.0",
        "@types/keytar": "^4.0.1",
        "@types/lodash": "^4.14.98",
        "@types/mocha": "^2.2.42",
        "@types/node": "^7.0.43",
        "@types/semver": "^5.4.0",
        "tslint": "^5.8.0",
        "typescript": "^2.6.1",
        "vscode": "^1.1.6"
    },
    "dependencies": {
        "azure-arm-resource": "^2.0.0-preview",
        "azure-storage": "",
        "fs-extra": "^4.0.2",
        "lodash": "^4.17.4",
        "ms-rest": "^2.2.7",
        "ms-rest-azure": "^2.2.3",
        "opn": "5.1.0",
        "request-promise": "4.2.1",
        "semver": "5.4.1",
        "vscode-nls": "2.0.2",
        "ws": "3.1.0"
    },
    "extensionDependencies": [
        "ms-vscode.azure-account"
    ]
}
